export interface TravelData {
  id: number;
  km: number;
  addresOrigin: string;
  latOrigin: string;
  lngOrigin: string;
  addressDestiny: string;
  latDestiny: string;
  lngDestiny: string;
  idCollaborator: number;
  idDriver: null;
  typeRequest: string;
  typeTravel: string;
  typeVehicle: string;
  date: string;
  hour: string;
  area: string;
  price: string;
  time: string;
  status: string;
  reference: string;
  createdAt: string;
  updatedAt: string;
  province?: string;
  driver?: null;
  detailTravels?: DetailTravel[];
}

export interface DetailTravel {
  id: number;
  idTravel: number;
  km: number;
  address: string;
  lat: string;
  lng: string;
  idUser: number | null;
  invited: null | string;
  price: string;
  time: string;
  createdAt: string;
  updatedAt: string;
  user: UserTravel | null;
}

export interface UserTravel {
  id: number;
  firstName: string;
  secondName: string;
  firstLastName: string;
  secondLastName: string;
  email: string;
  userImgUrl: string;
}

export interface TravelDBData {
  msg: boolean;
  travelDb: TravelDB;
}

export interface TravelDB {
  id: number;
  km: number;
  addresOrigin: string;
  latOrigin: string;
  lngOrigin: string;
  addressDestiny: string;
  latDestiny: string;
  lngDestiny: string;
  idCollaborator: number;
  idDriver: number;
  typeRequest: string;
  typeTravel: string;
  typeVehicle: string;
  date: string;
  hour: string;
  area: string;
  price: string;
  time: string;
  status: string;
  reference: string;
  createdAt: string;
  updatedAt: string;
}

export interface TravelDriverStatus {
  travel: TravelStatus;
}

export interface TravelStatus {
  id: number;
  idDriver: number;
  status: string;
}

export interface TravelTrack {
  latitude: string;
  longitude: string;
  address: string;
  user: UserTrack[];
}

export interface UserTrack {
  id: number | null;
  travelDetailId: number;
  img: string | null;
  name: string;
  price: number | string;
  isInvited: boolean;
  email: string;
  isSelected: boolean;
  expoToken: string;
}
export interface BaseRateResponse {
  baseRate: string;
}
export interface CostTravelTrack {
  costTravel: string;
  rateDB: RateDB;
}

export interface RateDB {
  id: number;
  nameProvince: string;
  idRegion: number;
  idRate: number;
  status: number;
  createdAt: Date;
  updatedAt: Date;
  rate: Rate;
  detailRate: DetailRate;
}

export interface DetailRate {
  id: number;
  idRate: number;
  baseRate: string;
  valueKm: string;
  applyFrom: string;
  valueMin: string;
  fromDate: string;
  untilDate: string;
  extra: string;
  status: number;
  createdAt: Date;
  updatedAt: Date;
}

export interface Rate {
  id: number;
  name: string;
  status: number;
  createdAt: Date;
  updatedAt: Date;
}

export interface TrackDistance {
  tripDistance: number;
  duration: number;
}

export interface TrackDetail {
  currentPointTravel: number;
  distanceData: TrackDistance;
  userList: UserTrack[];
  travelCost: CostTravelTrack;
}
export interface TravelFinished {
  status: "cancel" | "completed";
  commission: number;
  price: number;
  km: number;
  time: number;
}
export interface TravelDetailSave {
  price: string;
  km: string;
  time: string;
}

// Generated by https://quicktype.io

// Generated by https://quicktype.io

export interface ResponseAvailableDriver {
  ok:   boolean;
  msg:  string;
  data: Data;
}

export interface Data {
  id:                  number;
  role_id:             number;
  email:               string;
  full_name:           string;
  identification:      string;
  phone:               string;
  photo:               string;
  photo_id_front:      string;
  photo_id_back:       string;
  photo_licence_front: string;
  photo_licence_back:  string;
  is_active:           boolean;
  is_available:        boolean;
  created_at:          string;
}
